version: '3.9'
services:

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo admin -u root -p rootpassword --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s
    volumes:
      - mongodb_data_container:/data/db
    networks:
        - rabbitmq_go_net

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
        - 5672:5672 # for sender and consumer connections
        - 15672:15672 # for RabbitMQ GUI
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
        - ../rabbitmq/data/:/var/lib/rabbitmq/
    networks:
        - rabbitmq_go_net
  
  producer:
      image: producer:latest
      container_name: 'producer'
      command: dockerize -wait tcp://rabbitmq:5672 -timeout 30s -wait-retry-interval 5s /app/producer
      environment:
        RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672/
        RABBITMQ_QUEUE: rss_urls
      ports:
        - 5050:5050
      networks:
        - rabbitmq_go_net

  worker:
    image: worker:latest
    container_name: 'worker'
    command: dockerize -wait tcp://mongodb:27017 -wait tcp://rabbitmq:5672 -wait tcp://rabbitmq:15672 -wait tcp://producer:5050 -timeout 30s -wait-retry-interval 5s /app/consumer
    environment:
      MONGO_URI: mongodb://root:rootpassword@mongodb:27017/test_db?authSource=admin
      MONGO_DATABASE: test_db
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672/
      RABBITMQ_QUEUE: rss_urls
    networks:
        - rabbitmq_go_net
    # depends_on:
    #   mondodb_container:
    #     condition: service_healthy
    #   rabbitmq:
    #     condition: service_started

volumes:
  mongodb_data_container:

networks:
  rabbitmq_go_net:
    driver: bridge

